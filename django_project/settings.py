"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path
import braintree

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'umu1VbMOHwv15X4b4zwPxfOuMLUhumZeuuV6DNk2iLJYcHlGalR6aSh07z25PWI0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['aldynkushkash.ru', 'www.aldynkushkash.ru', '89.108.64.179', '2a00:f940:2:4:2::2113', '89-108-64-179.cloudvps.regruhosting.ru', 'localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_filters',
    'allauth',
    'allauth.account', 
    'allauth.socialaccount', 
    'allauth.socialaccount.providers.google', 
    'django_cleanup',
    'easy_thumbnails',
    'fpages',
    'home',
    'news.apps.NewsConfig',
    'sign',
    'protect',
    'shop.apps.ShopConfig',
    'cart.apps.CartConfig',
    'orders.apps.OrdersConfig',
    'payment.apps.PaymentConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates') ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
                'news.middlewares.gb_context_processor',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'django_project_db',
        'USER': 'django',
        'PASSWORD': 'aeNgah7paij7',
        'HOST': 'localhost',
        'PORT': '',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Krasnoyarsk'

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static/'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

THUMBNAIL_ALIASES = {
    '': {
        'defaults': {
            'size': (96, 96),
            'crop': 'scale',
        },
    },
}

THUMBNAIL_BASEDIR = 'thumbnails'

SITE_ID = 1

LOGIN_URL = 'accounts/login/'
LOGIN_REDIRECT_URL = '/'

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'

EMAIL_HOST = 'smtp.yandex.ru' # адрес сервера Яндекс-почты для всех один и тот же
EMAIL_PORT = 465 # порт smtp сервера тоже одинаковый
EMAIL_HOST_USER = 'admin@aldynkushkash.ru' # ваше имя пользователя, например 
    # если ваша почта user@yandex.ru, то сюда надо писать user, иными 
    # словами, это всё то что идёт до собаки
EMAIL_HOST_PASSWORD = '10011979Ak' # пароль от почты
EMAIL_USE_SSL = True # Яндекс использует ssl, подробнее о том, что это, 
    # почитайте на Википедии, но включать его здесь обязательно

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '987781668580-bo3ccs6ea90gvch9oqekf142fr3r20sb.apps.googleusercontent.com',
            'secret': 'eqdPnY6N0PLSeD3hYXGgQ3lI',
            'key': ''
        }
    }
}

ADMINS = [
    ('Aidys', 'admin@aldynkushkash.ru'),
    # список всех админов в формате ('имя', 'их почта')
]
MANAGERS = [
    ('Shoyun A.S.', 'glavred@aldynkushkash.ru'),
    # список всех менеджеров в формате ('имя', 'их почта')
]
SERVER_EMAIL = 'server@aldynkushkash.ru' # это будет у нас вместо аргумента FROM в массовой рассылке

CART_SESSION_ID = 'cart'

# REDIS settings
# Настройки Redis условные и у вас они могут отличатся в зависимости от конфигурации
REDIS_HOST = '127.0.0.1'
REDIS_PORT = '6379'
REDIS_PASSWORD = '' #'O0bwn88ETW1xfA4xEEt3q7DZLxCXNil6+bkmrqkQ0GKGt7+JQ+rua46Y5AZNYOSbabah3catsVIo4VDF'

# CELERY settings
CELERY_BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_BROKER_TRANSPORT_OPTION = {'visibility_timeout': 3600}
CELERY_RESULT_BACKEND = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Braintree settings
BRAINTREE_MERCHANT_ID = 'j88ydr84fsptwczp'  # Merchant ID
BRAINTREE_PUBLIC_KEY = '7zwk5w2yzt49mb7x'  # Public Key
BRAINTREE_PRIVATE_KEY = 'cdaf62bbddd902861096340df243e7a0'  # Private Key

BRAINTREE_CONF = braintree.Configuration(
    braintree.Environment.Sandbox,
    BRAINTREE_MERCHANT_ID,
    BRAINTREE_PUBLIC_KEY,
    BRAINTREE_PRIVATE_KEY
)
